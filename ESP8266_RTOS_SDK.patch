diff --git a/components/esptool_py/CMakeLists.txt b/components/esptool_py/CMakeLists.txt
index d3021053..8ce8648e 100644
--- a/components/esptool_py/CMakeLists.txt
+++ b/components/esptool_py/CMakeLists.txt
@@ -67,7 +67,7 @@ if(NOT BOOTLOADER_BUILD)
                                     FLASH_FILE_TEMPLATE ${CMAKE_CURRENT_BINARY_DIR}/flash_encrypted_app_args.in)
     endif()
 
-    add_dependencies(flash partition_table)
+    add_dependencies(flash2 partition_table)
 
     # If anti-rollback option is set then factory partition should not be in Partition Table.
     # In this case, should be used the partition table with two ota app without the factory.
diff --git a/components/esptool_py/project_include.cmake b/components/esptool_py/project_include.cmake
index 172628f0..b500a163 100644
--- a/components/esptool_py/project_include.cmake
+++ b/components/esptool_py/project_include.cmake
@@ -144,7 +144,7 @@ function(esptool_py_custom_target target_name flasher_filename dependencies)
         )
 endfunction()
 
-esptool_py_custom_target(flash project "app;partition_table;bootloader")
+esptool_py_custom_target(flash2 project "app;partition_table;bootloader")
 esptool_py_custom_target(app-flash app "app")
 
 if(CONFIG_SECURE_FLASH_ENCRYPTION_MODE_DEVELOPMENT)
diff --git a/components/pthread/CMakeLists.txt b/components/pthread/CMakeLists.txt
index 653799ad..df5a961a 100644
--- a/components/pthread/CMakeLists.txt
+++ b/components/pthread/CMakeLists.txt
@@ -4,7 +4,7 @@ idf_component_register(SRCS "pthread.c"
                     INCLUDE_DIRS include)
 
 set(extra_link_flags "-u pthread_include_pthread_impl")
-list(APPEND extra_link_flags "-u pthread_include_pthread_cond_impl")
+list(APPEND extra_link_flags "-u pthread_include_pthread_cond_var_impl")
 list(APPEND extra_link_flags "-u pthread_include_pthread_local_storage_impl")
 
 if(CONFIG_FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP)
diff --git a/components/pthread/component.mk b/components/pthread/component.mk
index c5793fde..0e1cd8a3 100644
--- a/components/pthread/component.mk
+++ b/components/pthread/component.mk
@@ -16,6 +16,6 @@ ifeq ($(GCC_NOT_5_2_0), 1)
 # Forces the linker to include pthread implementation from this component,
 # instead of the weak implementations provided by libgcc.
 COMPONENT_ADD_LDFLAGS += -u pthread_include_pthread_impl
-COMPONENT_ADD_LDFLAGS += -u pthread_include_pthread_cond_impl
+COMPONENT_ADD_LDFLAGS += -u pthread_include_pthread_cond_var_impl
 COMPONENT_ADD_LDFLAGS += -u pthread_include_pthread_local_storage_impl
 endif  # GCC_NOT_5_2_0
diff --git a/tools/cmake/ldgen.cmake b/tools/cmake/ldgen.cmake
index 22d7fe67..130dfa8c 100644
--- a/tools/cmake/ldgen.cmake
+++ b/tools/cmake/ldgen.cmake
@@ -58,7 +58,8 @@ function(__ldgen_process_template template output)
 
     add_custom_command(
         OUTPUT ${output}
-        COMMAND ${python} ${idf_path}/tools/ldgen/ldgen.py
+        COMMAND ${CMAKE_COMMAND} -E env "IDF_PATH=${IDF_PATH}"
+            ${python} ${idf_path}/tools/ldgen/ldgen.py
         --config    ${sdkconfig}
         --fragments "$<JOIN:${ldgen_fragment_files},\t>"
         --input     ${template}
